name: Linux Build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.24.2

      - name: Install Dependencies
        run: |
          # Install CMake, Ninja, GTK+ 3, ALSA, and other dependencies
          sudo apt-get update
          sudo apt-get install -y \
            cmake \
            ninja-build \
            ruby-dev \
            build-essential \
            libgtk-3-dev \
            libasound2-dev \
            libcairo2-dev \
            libglib2.0-dev \
            libgstreamer1.0-dev \
            libgstreamer-plugins-base1.0-dev \
            libnotify-dev \
            libx11-dev \
            libavformat-dev \
            libavcodec-dev \
            libswscale-dev \
            libpulse-dev \
            libopenal-dev
          sudo gem install --no-document fpm
          # Install Flutter dependencies
          flutter pub get

      - name: Get Version
        id: version
        run: |
          echo "version=$(grep 'version:' pubspec.yaml | awk '{print $2}')" >> $GITHUB_ENV

      - name: Build Linux .deb Package
        run: |
          flutter build linux --release
          if [ $? -ne 0 ]; then
            echo "Flutter build failed!"
            exit 1
          fi
          mkdir -p build/deb
          cp build/linux/release/bundle/myapp /usr/bin/myapp
          fpm -s dir -t deb -n myapp -v ${{ env.version }} --description "My Flutter App" --license MIT -C /usr/bin myapp
          mv myapp*.deb build/deb/

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Linux Artifacts
          path: |
            build/deb/*.deb

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.version }}
          name: Release ${{ env.version }}
          body: "This release contains the latest .deb."
          artifacts: |
            build/deb/*.deb
          token: ${{ secrets.GITHUB_TOKEN }}
